import type { Metadata } from 'next';
import localFont from 'next/font/local';
import './globals.css';
import MysticSymbolsEffect from './Layout-component/BubbleEffect/MysticSymbolsEffect';
import StoreInitializer from './Layout-component/StoreInitializer';
import { getUser } from '@/lib/supabse/server';
import { Check, ChevronLeft, Circle, House, Menu, Plus } from 'lucide-react';
import CircleButtonWithAlert from './components/shared/CircleButtonWithAlert';
import { headers } from 'next/headers';
import Link from 'next/link';
import { CheckCircleNavigation } from './CheckCircleNavigation';

const geistSans = localFont({
  src: './fonts/GeistVF.woff',
  variable: '--font-geist-sans',
  weight: '100 900',
});
const geistMono = localFont({
  src: './fonts/GeistMonoVF.woff',
  variable: '--font-geist-mono',
  weight: '100 900',
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const currentUser = await getUser();
  // console.log('layout currentUser:', currentUser);

  // 현재 경로 가져오기
  const headersList = headers();
  const pathname = headersList.get('x-pathname') || '';

  // 숨길 경로 목록
  const hiddenNavPaths = ['/start', '/question'];
  const shouldShowNav = !hiddenNavPaths.includes(pathname);

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased relative mx-auto max-w-lg`}
      >
        {/* {shouldShowNav && (
          <div className="w-full h-12 absolute top-0 z-50 flex px-6 items-center justify-between">
            <ChevronLeft color="#9CA3AF" size={32} />
            <Menu color="#9CA3AF" size={32} />
          </div>
        )} */}

        {/* <div className="w-full px-6  h-12 flex items-end ">
          <h2>{currentUser?.username}님 반가워요!</h2>
        </div> */}

        {children}

        <StoreInitializer currentUser={currentUser} />
        <MysticSymbolsEffect />
        <CheckCircleNavigation currentUser={currentUser} />

        {/* {shouldShowNav && (
          <div className="fixed bottom-20 right-6 z-50 ml-auto w-fit flex items-center justify-center">
            <CircleButtonWithAlert />
          </div>
        )}
        {shouldShowNav && (
          <div className="fixed bottom-6 right-6 z-50 ml-auto w-fit flex items-center justify-center">
            <Link href="/main">
              <div
                className="bg-gray-400 w-12 h-12 flex items-center justify-center rounded-full cursor-pointer shadow-xl"
                style={{
                  boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.6)', // 더 진한 검은색 그림자, spread 반경 증가
                }}
              >
                <House className="w-7 h-7 text-white" />
              </div>
            </Link>
          </div>
        )} */}
      </body>
    </html>
  );
}
